The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is an 1-my_list text file in reStructuredText format.  First import
``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

    >>> MyList(6, 4)
    10
    >>> MyList(1)
    99
    >>> MyList('u')# doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> MyList(1, 'u')# doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> MyList(1, 1.2)
    2
    >>> MyList(1.3, 2)
    3
    >>> MyList(1.3, 2.6)
    3
    >>> MyList(1.3, "2")# doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> MyList("1.3", 2)# doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> MyList()# doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> a = float("inf")
    >>> b = 10
    >>> MyList(a, b)  # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    OverflowError: int too large to convert to float
    >>> MyList(float('nan'), 2)  # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is an 1-my_list text file in reStructuredText format.  First import
``MyList`` from the ``1-my_list`` module:

        >>> m = __import__("1-my_list").__doc__
        >>> len(m) > 0
        True

        >>> c = __import__("1-my_list").MyList.__doc__
        >>> len(c) > 0
        True

        >>> f = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(f) > 0
        True


    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)

Now use it:

    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> my_list = MyList([3, 1, 2])
    >>> my_list.print_sorted()
    [1, 2, 3]

    >>> my_list = MyList([0])
    >>> my_list.print_sorted()
    [0]

    >>> my_list =  MyList([1, 1, 1])
    >>> my_list.print_sorted()
    [1, 1, 1]

    >>> my_list = MyList([-1, -5, 0, 3])
    >>> my_list.print_sorted()
    [-5, -1, 0, 3]

    >>> my_list = MyList([-5, -5, 0, 3])
    >>> my_list.print_sorted()
    [-5, -5, 0, 3]

    >>> my_list = MyList(['apple', 'banana', 'cherry'])
    >>> my_list.print_sorted()
    ['apple', 'banana', 'cherry']

    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

    >>> my_list = MyList([2, 2, 10000000000000000000000000000000000000000000])
    >>> my_list.print_sorted()
    [2, 2, 10000000000000000000000000000000000000000000]

    >>> my_list = MyList([2, 2, None])
    >>> my_list.print_sorted() #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    TypeError: '<' not supported between instances of 'NoneType' and 'int'

    >>> my_list.append(NULL)
    Traceback (most recent call last):
        ...
    NameError: name 'NULL' is not defined

    >>> my_list.append(int('inf')) #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: invalid literal for int() with base 10: 'inf'

